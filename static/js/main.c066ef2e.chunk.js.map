{"version":3,"sources":["components/TodoButton.js","components/TaskItem.js","components/TaskList.js","App.js","index.js"],"names":["TodoButton","props","className","onSubmit","event","preventDefault","id","Date","now","text","document","getElementById","value","complete","type","name","placeholder","ListItem","TaskItem","listItems","tasks","map","task","index","onClick","removeTasks","completeTasks","TaskList","useState","setTasks","tasksRemoved","filter","comptask","compArr","find","newTasks","App","ReactDOM","render","StrictMode"],"mappings":"4JAyBeA,MAvBf,SAAoBC,GAelB,OACE,uBAAMC,UAAU,YAAYC,SAd9B,SAAqBC,GACnBA,EAAMC,iBAGNJ,EAAME,SAAS,CACbG,GAAI,KAAOC,KAAKC,MAChBC,KAAMC,SAASC,eAAe,WAAWC,MACzCC,SAAU,UAGZH,SAASC,eAAe,WAAWC,MAAQ,IAI3C,UACE,uBAAOE,KAAK,OAAOR,GAAG,UAAUS,KAAK,WAAWC,YAAY,qBAC5D,wBAAQd,UAAU,YAAlB,0B,cChBN,SAASe,EAAShB,GACd,OACI,oBAAIK,GAAIL,EAAMK,GAAIO,SAAUZ,EAAMY,SAAlC,SAA6CZ,EAAMW,QA0B5CM,MArBf,SAAkBjB,GACd,IAAMkB,EAAYlB,EAAMmB,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAC9B,gCACI,cAACN,EAAD,CAAwBX,GAAIgB,EAAKhB,GAAIM,MAAOU,EAAKb,KAAMI,SAAUS,EAAKT,UAAvDS,EAAKhB,IACpB,wBAAQA,GAAG,eAAekB,QAAS,kBAAMvB,EAAMwB,YAAYH,EAAKhB,KAAhE,oBAGiB,UAAhBgB,EAAKT,SAAoB,wBAAQP,GAAG,iBAAiBkB,QAAS,kBAAMvB,EAAMyB,cAAcJ,EAAKhB,KAApE,sBAA6F,OALjHiB,MAUd,OACI,6BACKJ,KC0CEQ,MA9Df,WAAqB,IAAD,EACUC,mBAAS,IADnB,mBACTR,EADS,KACFS,EADE,KAQVJ,EAAc,SAAAnB,GAChB,IAAMwB,EAAe,YAAIV,GAAOW,QAAQ,SAAST,GAC7C,OAAOA,EAAKhB,KAAOA,KAEvBuB,EAASC,IAGPJ,EAAgB,SAAAM,GAClB,IAAMC,EAAO,YAAOb,GACpBa,EAAQC,MAAK,SAASZ,GAClB,OAAOA,EAAKhB,KAAO0B,KACpBnB,SAAW,OACdgB,EAASI,IAmBb,OACI,gCAEI,cAAC,EAAD,CAAY9B,SAvCJ,SAAAmB,GACZ,IAAMa,EAAQ,CAAIb,GAAJ,mBAAaF,IAC3BS,EAASM,MAwCL,sBAAKjC,UAAU,QAAf,UACI,8CACA,qBAAKA,UAAU,eAAf,SACI,cAAC,EAAD,CAAUkB,MAvBC,YAAIA,GAAOW,QAAO,SAAST,GAC9C,MAAyB,SAAlBA,EAAKT,YAsB+BY,YAAaA,EAAaC,cAAeA,SAKpF,sBAAKxB,UAAU,YAAf,UACI,2CACA,cAAC,EAAD,CAAUkB,MAtBG,YAAIA,GAAOW,QAAO,SAAST,GAC5C,MAAyB,SAAlBA,EAAKT,YAqByBY,YAAaA,EAAaC,cAAeA,WC5C3EU,MAXf,WACE,OACE,sBAAKlC,UAAU,MAAf,UACE,iCACM,8CAEN,cAAC,EAAD,QCNNmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAASC,eAAe,U","file":"static/js/main.c066ef2e.chunk.js","sourcesContent":["import React from 'react';\n\nfunction TodoButton(props) {\n\n  function addActivity(event) {\n    event.preventDefault(); //prevent submit from reloading page\n\n    //initialise task properties\n    props.onSubmit({\n      id: \"ID\" + Date.now(),\n      text: document.getElementById(\"taskbar\").value,\n      complete: \"false\"\n    });\n\n    document.getElementById(\"taskbar\").value = \"\"; //clear textfield\n  }\n\n  return (\n    <form className='todo-form' onSubmit={addActivity}>\n      <input type='text' id='taskbar' name='activity' placeholder='Add a task here!' /> \n      <button className='addButton'>add task</button>\n    </form>\n  );\n}\n\nexport default TodoButton;\n","import React from 'react'\nimport TaskList from './TaskList';\n\n//used to create a task element\nfunction ListItem(props){\n    return (\n        <li id={props.id} complete={props.complete}>{props.value}</li> \n    )\n}\n\n//map tasks from task array into list items, and display them as unordered list\nfunction TaskItem(props) {\n    const listItems = props.tasks.map((task, index) => (\n        <div key={index}>\n            <ListItem key={task.id} id={task.id} value={task.text} complete={task.complete}/>\n            <button id=\"removebutton\" onClick={() => props.removeTasks(task.id)}>remove</button>\n            \n            {/* if the task is complete, hide the complete button */}\n            {task.complete===\"false\"? <button id=\"completebutton\" onClick={() => props.completeTasks(task.id)}>complete</button> : null }\n            \n        </div>   \n        )\n    );\n    return (\n        <ul>\n            {listItems}\n        </ul>\n    )\n}\n\n\n\nexport default TaskItem;\n","import React, {useState} from 'react';\nimport TaskItem from './TaskItem';\nimport TodoButton from './TodoButton';\nimport '../App.css';\n\nfunction TaskList() {\n    const [tasks, setTasks] = useState([]); //set default state to empty array of tasks\n    \n    const addTask = task => {\n        const newTasks = [task, ...tasks]; //add new task to array of old tasks\n        setTasks(newTasks); //set the state to the new array\n    }    \n\n    const removeTasks = id => {\n        const tasksRemoved = [...tasks].filter( function(task){\n            return task.id !== id; //filter out task with the id passed in\n        }); //tasksRemoved is updated array with the removed tasks \n        setTasks(tasksRemoved); //update the current tasks with the filtered array\n    }\n\n    const completeTasks = comptask => { \n        const compArr = [...tasks];\n        compArr.find(function(task){\n            return task.id === comptask;\n        }).complete = \"true\";\n        setTasks(compArr);\n    }\n    \n    // returns array of items which are marked incomplete\n    const itemIncomplete = () => {\n        const taskIncomplete = [...tasks].filter(function(task) {\n            return task.complete !== \"true\";\n        });\n        return taskIncomplete;\n    }\n\n    //returns array of items which are marked complete\n    const itemComplete = () => {\n        const taskComplete = [...tasks].filter(function(task) {\n            return task.complete === \"true\";\n        });\n        return taskComplete;\n    }\n\n    return (\n        <div>\n            {/* task bar */}\n            <TodoButton onSubmit={addTask}/>\n            \n            {/* (incomplete) task list */}\n            <div className=\"to-do\">\n                <h2>Things To Do</h2>\n                <div className=\"activityList\">\n                    <TaskItem tasks={itemIncomplete()} removeTasks={removeTasks} completeTasks={completeTasks}/>     \n                </div>\n            </div>  \n            \n            {/* completed tasks */}\n            <div className=\"completed\">\n                <h2>Completed</h2>\n                <TaskItem tasks={itemComplete()} removeTasks={removeTasks} completeTasks={completeTasks}/>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default TaskList\n\n","import React from 'react';\nimport './App.css';\nimport TodoButton from './components/TodoButton';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n            <h1>To-Do List</h1>\n      </header>\n      <TaskList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}