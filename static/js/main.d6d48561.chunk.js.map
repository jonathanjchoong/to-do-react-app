{"version":3,"sources":["components/TodoButton.js","components/TaskItem.js","components/TaskList.js","App.js","index.js"],"names":["TodoButton","props","useState","todoInput","setTodoInput","className","name","onSubmit","e","preventDefault","id","Date","now","text","complete","type","placeholder","value","onChange","target","ListItem","TaskItem","listItems","tasks","map","task","index","onClick","removeTasks","completeTasks","TaskList","setTasks","tasksRemoved","filter","comptask","compArr","find","newTasks","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAmDeA,MAjDf,SAAoBC,GAAQ,IAAD,EACSC,mBAAS,IADlB,mBAClBC,EADkB,KACPC,EADO,KAoBzB,OACE,uBAAMC,UAAU,YAAYC,KAAK,OAAOC,SAdrB,SAAAC,GACnBA,EAAEC,iBAEFR,EAAMM,SAAS,CACbG,GAAI,KAAOC,KAAKC,MAChBC,KAAMV,EACNW,UAAU,IAGZV,EAAa,KAKb,UACE,uBAAOW,KAAK,OAAOL,GAAG,UAAUJ,KAAK,WAAWU,YAAY,mBAAmBC,MAAOd,EAAWe,SAnBhF,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACrBf,EAAae,EAAOF,UAmBlB,wBAAQZ,UAAU,YAAlB,0B,sBCrBN,SAASe,EAAT,GAAqC,IAAlBH,EAAiB,EAAjBA,MAAUhB,EAAO,yBAChC,OACI,8CAAQA,GAAR,aAAgBgB,KA0BTI,MArBf,SAAkBpB,GACd,IAAMqB,EAAYrB,EAAMsB,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAC9B,gCACI,cAACN,EAAD,CAAwBV,GAAIe,EAAKf,GAAIO,MAAOQ,EAAKZ,KAAMC,SAAUW,EAAKX,UAAvDW,EAAKf,IACpB,wBAAQA,GAAG,eAAeiB,QAAS,kBAAM1B,EAAM2B,YAAYH,EAAKf,KAAhE,qBAGiB,IAAhBe,EAAKX,SAAkB,wBAAQJ,GAAG,iBAAiBiB,QAAS,kBAAM1B,EAAM4B,cAAcJ,EAAKf,KAApE,sBAA6F,OAL/GgB,MAUd,OACI,6BACKJ,KC0CEQ,MA9Df,WAAqB,IAAD,EACU5B,mBAAS,IADnB,mBACTqB,EADS,KACFQ,EADE,KAQVH,EAAc,SAAAlB,GAChB,IAAMsB,EAAe,YAAIT,GAAOU,QAAQ,SAASR,GAC7C,OAAOA,EAAKf,KAAOA,KAEvBqB,EAASC,IAGPH,EAAgB,SAAAK,GAClB,IAAMC,EAAO,YAAOZ,GACpBY,EAAQC,MAAK,SAASX,GAClB,OAAOA,EAAKf,KAAOwB,KACpBpB,UAAW,EACdiB,EAASI,IAmBb,OACI,gCAEI,cAAC,EAAD,CAAY5B,SAvCJ,SAAAkB,GACZ,IAAMY,EAAQ,CAAIZ,GAAJ,mBAAaF,IAC3BQ,EAASM,MAwCL,sBAAKhC,UAAU,QAAf,UACI,8CACA,qBAAKA,UAAU,eAAf,SACI,cAAC,EAAD,CAAUkB,MAvBC,YAAIA,GAAOU,QAAO,SAASR,GAC9C,OAAyB,IAAlBA,EAAKX,YAsB+Bc,YAAaA,EAAaC,cAAeA,SAKpF,sBAAKxB,UAAU,YAAf,UACI,2CACA,cAAC,EAAD,CAAUkB,MAtBG,YAAIA,GAAOU,QAAO,SAASR,GAC5C,OAAyB,IAAlBA,EAAKX,YAqByBc,YAAaA,EAAaC,cAAeA,WC5C3ES,MAXf,WACE,OACE,sBAAKjC,UAAU,MAAf,UACE,iCACM,8CAEN,cAAC,EAAD,QCNNkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d6d48561.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nfunction TodoButton(props) {\n  const [todoInput, setTodoInput] = useState(\"\");\n  \n  const handleChange = ({target}) => {\n    setTodoInput(target.value);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    \n    props.onSubmit({\n      id: \"ID\" + Date.now(),\n      text: todoInput,\n      complete: false\n    });\n    \n    setTodoInput(\"\");\n  }\n\n\n  return (\n    <form className='todo-form' name=\"todo\" onSubmit={handleSubmit}>\n      <input type='text' id='taskbar' name='activity' placeholder='Add a task here!' value={todoInput} onChange={handleChange}/> \n      <button className='addButton'>add task</button>\n    </form>\n  );\n\n\n  // function addActivity(event) {\n  //   event.preventDefault(); //prevent submit from reloading page\n\n  //   //initialise task properties\n  //   props.onSubmit({\n  //     id: \"ID\" + Date.now(),\n  //     text: document.getElementById(\"taskbar\").value,\n  //     complete: false\n  //   });\n\n    // document.getElementById(\"taskbar\").value = \"\"; //clear textfield\n  // }\n\n  // return (\n  //   <form className='todo-form' onSubmit={addActivity}>\n  //     <input type='text' id='taskbar' name='activity' placeholder='Add a task here!' /> \n  //     <button className='addButton'>add task</button>\n  //   </form>\n  // );\n}\n\nexport default TodoButton;","import React from 'react'\nimport TaskList from './TaskList';\n\n//used to create a task element\nfunction ListItem({value, ...props}){\n    return (\n        <li {...props}>{value}</li> \n    )\n}\n\n//map tasks from task array into list items, and display them as unordered list\nfunction TaskItem(props) {\n    const listItems = props.tasks.map((task, index) => (\n        <div key={index}>\n            <ListItem key={task.id} id={task.id} value={task.text} complete={task.complete}/>\n            <button id=\"removebutton\" onClick={() => props.removeTasks(task.id)}>remove</button>\n            \n            {/* if the task is complete, hide the complete button */}\n            {task.complete===false? <button id=\"completebutton\" onClick={() => props.completeTasks(task.id)}>complete</button> : null }\n            \n        </div>   \n        )\n    );\n    return (\n        <ul>\n            {listItems}\n        </ul>\n    )\n}\n\n\n\nexport default TaskItem;\n","import React, {useState} from 'react';\nimport TaskItem from './TaskItem';\nimport TodoButton from './TodoButton';\nimport '../App.css';\n\nfunction TaskList() {\n    const [tasks, setTasks] = useState([]); //set default state to empty array of tasks\n    \n    const addTask = task => {\n        const newTasks = [task, ...tasks]; //add new task to array of old tasks\n        setTasks(newTasks); //set the state to the new array\n    }    \n\n    const removeTasks = id => {\n        const tasksRemoved = [...tasks].filter( function(task){\n            return task.id !== id; //filter out task with the id passed in\n        }); //tasksRemoved is updated array with the removed tasks \n        setTasks(tasksRemoved); //update the current tasks with the filtered array\n    }\n\n    const completeTasks = comptask => { \n        const compArr = [...tasks];\n        compArr.find(function(task){\n            return task.id === comptask;\n        }).complete = true;\n        setTasks(compArr);\n    }\n    \n    // returns array of items which are marked incomplete\n    const itemIncomplete = () => {\n        const taskIncomplete = [...tasks].filter(function(task) {\n            return task.complete !== true;\n        });\n        return taskIncomplete;\n    }\n\n    //returns array of items which are marked complete\n    const itemComplete = () => {\n        const taskComplete = [...tasks].filter(function(task) {\n            return task.complete === true;\n        });\n        return taskComplete;\n    }\n\n    return (\n        <div>\n            {/* task bar */}\n            <TodoButton onSubmit={addTask}/>\n            \n            {/* (incomplete) task list */}\n            <div className=\"to-do\">\n                <h2>Things To Do</h2>\n                <div className=\"activityList\">\n                    <TaskItem tasks={itemIncomplete()} removeTasks={removeTasks} completeTasks={completeTasks}/>     \n                </div>\n            </div>  \n            \n            {/* completed tasks */}\n            <div className=\"completed\">\n                <h2>Completed</h2>\n                <TaskItem tasks={itemComplete()} removeTasks={removeTasks} completeTasks={completeTasks}/>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default TaskList\n\n","import React from 'react';\nimport './App.css';\nimport TodoButton from './components/TodoButton';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n            <h1>To-Do List</h1>\n      </header>\n      <TaskList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}